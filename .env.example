# Discord Bot Configuration
# Discord Developer Portal (https://discord.com/developers/applications)에서 생성
DISCORD_BOT_TOKEN=your_discord_bot_token_here
DISCORD_CLIENT_ID=your_discord_client_id_here
DISCORD_CLIENT_SECRET=your_discord_client_secret_here

# Database Configuration
# PostgreSQL 연결 문자열
# 형식: postgresql://username:password@host:port/database?sslmode=require
DATABASE_URL=postgresql://user:password@host:5432/database

# Session Configuration
# 강력한 랜덤 문자열 사용 (32+ 자리)
# 생성 방법: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=your_long_random_secret_key_here

# Server Configuration
NODE_ENV=development
PORT=3000

# Application URL (프로덕션 배포 시)
# Railway: https://your-app.up.railway.app
# Replit: https://your-repl.repl.co
DASHBOARD_URL=http://localhost:3000

# Railway 자동 설정 (수동 설정 불필요)
# RAILWAY_PUBLIC_DOMAIN=your-app.up.railway.app

# Replit 자동 설정 (수동 설정 불필요)
# REPLIT_DOMAINS=your-repl.repl.co

# Optional: Google Cloud Storage (파일 업로드 기능 사용 시)
GOOGLE_CLOUD_PROJECT_ID=
GOOGLE_CLOUD_STORAGE_BUCKET=
GOOGLE_APPLICATION_CREDENTIALS=

# Optional: 추가 설정
# 로깅 레벨
LOG_LEVEL=info

# WebSocket 포트 (기본값: PORT와 동일)
# WS_PORT=3000

# CORS 설정 (프로덕션에서는 특정 도메인만 허용)
# CORS_ORIGIN=https://your-frontend-domain.com
